package academy.belhard;


import academy.belhard.entity.User;

import java.sql.SQLOutput;

public class Main {
//    Создайте новый проект, загрузите в него файл .gitignore (не пользуйтесь автоматической генерацией файла .gitignore, который предлагает github - он недостаточный, делайте, как показывал преподаватель на занятиях) и сделайте коммит
//    Создайте корневой пэкедж (если он был сгенерирован автоматически, то переименуйте его в academy.belhard), перенесите в него класс Main (класс, в котором находится метод main)
//    Внутри этого пэкеджа создайте пэкедж под названием entity (щелчок ПКМ по корневому пэкеджу -> New -> Packege)
//    Внутри пэкеджа entity создайте класс Person
//    Создайте 2 поля класса Person с названиями firstName и lastName типа String и модификаторами доступа protected
//    Создайте в классе Person конструктор с 2-мя аргументами (для обоих полей класса) и модификатором доступа public
//    Создайте в классе Person метод под названием getFullName с типом возвращаемого значения String и модификатором доступа public. Этот метод должен склеивать имя и фамилию через пробел и возвращать это значение
//    Создайте класс User (внутри пэкеджа entity), который будет являться дочерним классом по отношению к классу Person
//    В классе User создайте 2 поля email и password типа String и с модификаторами доступа типа private
//    В классе User создайте конструктор, который принимает 2 поля класса Person и 2 поля класса User - всего 4 аргумента (используйте вызов конструктора родительского класса с помощью ключевого слова super)
//    В классе User создайте метод getFullInfo с модификатором доступа public и возвращаемым значением типа String, который конкатенирует всю информацию о пользователе (кроме пароля) - смотри пример вывода
//    В классе User создайте метод isPasswordCorrect с модификатором доступа public и возвращаемым значением типа boolean. Этот метод должен принимать 1 аргумент типа String и возвращать true, если строка-аргумент соответствует паролю пользователя, и false в обратном случае (для проверки строк на равенство используйте метод equals класса String, а НЕ “==” !!!)
//

    public static void main(String[] args) {
        User user1 = new User("Yura", "Kniaziuk", "smolmi95@mail.ru", "epioigutu");

        System.out.println(user1.getFullInfo());
        System.out.println(user1.isPasswordCorrect("ertu"));
    }
}
